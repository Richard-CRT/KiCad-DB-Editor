<UserControl x:Class="KiCad_DB_Editor.View.UserControl_PartGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:KiCad_DB_Editor.View"
             xmlns:conv="clr-namespace:KiCad_DB_Editor.View.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <conv:Boolean_to_Visibility_Converter x:Key="Boolean_to_Visibility_Converter" />
    </UserControl.Resources>
    <DockPanel>
        <DockPanel DockPanel.Dock="Top">
            <CheckBox DockPanel.Dock="Right" Content="Show Parameters" Margin="5,0,0,0" VerticalContentAlignment="Center"
                      IsChecked="{Binding ShowParameterColumns, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type local:UserControl_PartGrid}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
            <TextBox DockPanel.Dock="Top" Text="{Binding OverallFilter, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:UserControl_PartGrid}}, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}" />
        </DockPanel>

        <!-- This framework element is there for the express purpose of having a named source for DataGridColumns to bind via as they are outside the visual tree -->
        <FrameworkElement DockPanel.Dock="Top" x:Name="dummyElementToGetDataContext"
                          DataContext="{Binding Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:UserControl_PartGrid}}}"
                          Visibility="Collapsed" />
        <!-- EnableRowVirtualization must be true or it creates every single part row even if not displayed -->
        <DataGrid x:Name="dataGrid_Main" AutoGenerateColumns="False" SelectionUnit="CellOrRowHeader" CanUserResizeRows="False"
                  ItemsSource="{Binding PartVMsCollectionView, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:UserControl_PartGrid}}, UpdateSourceTrigger=PropertyChanged}"
                  d:ItemsSource="{d:SampleData}"
                  SelectedCellsChanged="dataGrid_Main_SelectedCellsChanged"
                  KeyDown="dataGrid_Main_KeyDown"
                  PreviewKeyDown="dataGrid_Main_PreviewKeyDown"
                  BeginningEdit="dataGrid_Main_BeginningEdit"
                  CellEditEnding="dataGrid_Main_CellEditEnding"
                  EnableRowVirtualization="True"
                  PreviewTextInput="dataGrid_Main_PreviewTextInput"
                  >
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="LightGray"/>
                <Style TargetType="{x:Type DataGridCell}" >
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Grid>
                                    <Border Padding="3,0,3,0"
                                            Background="{TemplateBinding Background}"
                                            SnapsToDevicePixels="True"
                                            >
                                        <ContentPresenter VerticalAlignment="Center"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          />
                                    </Border>
                                    <Border>
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="6,6" MappingMode="Absolute" SpreadMethod="Repeat">
                                                <GradientStop Offset="0" Color="Transparent"/>
                                                <GradientStop Offset="0.7" Color="Transparent"/>
                                                <GradientStop Offset="0.7" Color="Coral"/>
                                                <GradientStop Offset="1" Color="Coral"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="Visibility" Value="Hidden" />
                                                <Style.Triggers>
                                                    <!-- This is bound to the Border, not the DataGridCell, only works because IsEnabled seems to inherit -->
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </Trigger>
                                                    <!--
                                                    <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}}" Value="False" >
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                    -->
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            SnapsToDevicePixels="True"
                                            />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FontFamily" Value="Consolas" />
                    <Setter Property="IsEnabled" Value="True" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <!-- Necessary to make the filter textboxes fill the width -->
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="SizeToCells"
                                        IsReadOnly="True"
                                        CanUserReorder="False"
                                        CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="/View/Resources/Component.png" Height="18" Margin="0,3,0,3" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding Path, Mode=OneWay, UpdateSourceTrigger=Default}"
                                    Visibility="{Binding DataContext.DisplayPartCategory, Source={x:Reference dummyElementToGetDataContext}, Converter={StaticResource Boolean_to_Visibility_Converter}}"
                                    >
                    <DataGridTextColumn.Header>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="Category" HorizontalAlignment="Center" />
                            <TextBox Text="{Binding DataContext.CategoryFilter, Mode=TwoWay, Source={x:Reference dummyElementToGetDataContext}, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Part.PartUID, Mode=TwoWay, UpdateSourceTrigger=Default}" >
                    <DataGridTextColumn.Header>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="Part UID" HorizontalAlignment="Center" />
                            <TextBox Text="{Binding DataContext.PartUIDFilter, Mode=TwoWay, Source={x:Reference dummyElementToGetDataContext}, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Part.Manufacturer, Mode=TwoWay, UpdateSourceTrigger=Default}" >
                    <DataGridTextColumn.Header>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="Manufacturer" HorizontalAlignment="Center" />
                            <TextBox Text="{Binding DataContext.ManufacturerFilter, Mode=TwoWay, Source={x:Reference dummyElementToGetDataContext}, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Part.MPN, Mode=TwoWay, UpdateSourceTrigger=Default}" >
                    <DataGridTextColumn.Header>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="MPN" HorizontalAlignment="Center" />
                            <TextBox Text="{Binding DataContext.MPNFilter, Mode=TwoWay, Source={x:Reference dummyElementToGetDataContext}, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTemplateColumn SortMemberPath="Part.Value">
                    <DataGridTemplateColumn.Header>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="Value" HorizontalAlignment="Center" />
                            <TextBox Text="{Binding DataContext.ValueFilter, Mode=TwoWay, Source={x:Reference dummyElementToGetDataContext}, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>
                        </StackPanel>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Part.Value, Mode=TwoWay, UpdateSourceTrigger=Default}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox IsEditable="True"
					                  Text="{Binding Part.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					                  ItemsSource="{Binding ParameterNamesWithVarWrapping, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:UserControl_PartGrid}}}"
                                      ItemStringFormat="↪ {0}"
					                  Loaded="TemplateColumn_ComboBox_Loaded"
					                  />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding Part.Description, Mode=TwoWay, UpdateSourceTrigger=Default}" >
                    <DataGridTextColumn.Header>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="Description" HorizontalAlignment="Center" />
                            <TextBox Text="{Binding DataContext.DescriptionFilter, Mode=TwoWay, Source={x:Reference dummyElementToGetDataContext}, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Part.Datasheet, Mode=TwoWay, UpdateSourceTrigger=Default}" >
                    <DataGridTextColumn.Header>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="Datasheet" HorizontalAlignment="Center" />
                            <TextBox Text="{Binding DataContext.DatasheetFilter, Mode=TwoWay, Source={x:Reference dummyElementToGetDataContext}, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridCheckBoxColumn Header="Excl. BOM"
                                        Binding="{Binding Part.ExcludeFromBOM, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        >
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type CheckBox}">
                            <Setter Property="Padding" Value="0,0,0,0" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.2" ScaleY="1.2" />
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Header="Excl. Board"
                                        Binding="{Binding Part.ExcludeFromBoard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        >
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type CheckBox}">
                            <Setter Property="Padding" Value="0,0,0,0" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.2" ScaleY="1.2" />
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Header="Excl. Sim"
                                        Binding="{Binding Part.ExcludeFromSim, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        >
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type CheckBox}">
                            <Setter Property="Padding" Value="0,0,0,0" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.2" ScaleY="1.2" />
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridTemplateColumn Header="Sym. Library"
                                        SortMemberPath="Part.SymbolLibraryName">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Part.SymbolLibraryName, Mode=TwoWay, UpdateSourceTrigger=Default}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox IsEditable="True"
                                      Text="{Binding Part.SymbolLibraryName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      ItemsSource="{Binding KiCadSymbolLibraries, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:UserControl_PartGrid}}}"
                                      DisplayMemberPath="Nickname"
                                      Loaded="TemplateColumn_ComboBox_Loaded"
                                      />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Sym. Name"
                                        SortMemberPath="Part.SymbolName">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Part.SymbolName, Mode=TwoWay, UpdateSourceTrigger=Default}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox IsEditable="True"
                                      Text="{Binding Part.SymbolName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      ItemsSource="{Binding SelectedKiCadSymbolLibrary.KiCadSymbolNames}"
                                      Loaded="TemplateColumn_ComboBox_Loaded"
                                      />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>
